// Code generated by ./gen/gen.go DO NOT EDIT.

package normalizer

import (
	"gopkg.in/bblfsh/sdk.v2/uast/role"
)

var typeRoles = map[string][]role.Role{
	// all AST nodes that implements ast.Expr
	"ArrayType":      {role.Expression},
	"BadExpr":        {role.Expression},
	"BasicLit":       {role.Expression},
	"BinaryExpr":     {role.Expression},
	"CallExpr":       {role.Expression},
	"ChanType":       {role.Expression},
	"CompositeLit":   {role.Expression},
	"Ellipsis":       {role.Expression},
	"FuncLit":        {role.Expression},
	"FuncType":       {role.Expression},
	"Ident":          {role.Expression},
	"IndexExpr":      {role.Expression},
	"InterfaceType":  {role.Expression},
	"KeyValueExpr":   {role.Expression},
	"MapType":        {role.Expression},
	"ParenExpr":      {role.Expression},
	"SelectorExpr":   {role.Expression},
	"SliceExpr":      {role.Expression},
	"StarExpr":       {role.Expression},
	"StructType":     {role.Expression},
	"TypeAssertExpr": {role.Expression},
	"UnaryExpr":      {role.Expression},

	// all AST nodes that implements ast.Stmt
	"AssignStmt":     {role.Statement},
	"BadStmt":        {role.Statement},
	"BlockStmt":      {role.Statement},
	"BranchStmt":     {role.Statement},
	"CaseClause":     {role.Statement},
	"CommClause":     {role.Statement},
	"DeclStmt":       {role.Statement},
	"DeferStmt":      {role.Statement},
	"EmptyStmt":      {role.Statement},
	"ExprStmt":       {role.Statement},
	"ForStmt":        {role.Statement},
	"GoStmt":         {role.Statement},
	"IfStmt":         {role.Statement},
	"IncDecStmt":     {role.Statement},
	"LabeledStmt":    {role.Statement},
	"RangeStmt":      {role.Statement},
	"ReturnStmt":     {role.Statement},
	"SelectStmt":     {role.Statement},
	"SendStmt":       {role.Statement},
	"SwitchStmt":     {role.Statement},
	"TypeSwitchStmt": {role.Statement},
}
